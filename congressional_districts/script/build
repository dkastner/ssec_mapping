#! /usr/bin/ruby
# Source http://www.census.gov/geo/maps-data/data/cbf/cbf_cds.html

require 'rubygems'
require 'open-uri'
require 'fileutils'
require 'json'

ROOT = File.expand_path("../", File.dirname(__FILE__))

CONGRESSES = {
  114 => 2015
}

# FIPS code => US Postal Code
STATES = {
  "48" => "TX",
}

def filename(congress,state)
  "http://www2.census.gov/geo/tiger/GENZ2012/cd/cb_rd13_us_cd114_500k.zip"
end

def human_name(congress)
  if congress == 103
    "103rd Congress"
  else
    "#{congress}th Congress"
  end
end

def write(destination, data)
  File.open(destination, "w") { |file| file.write data.to_json }
end

def add_and_commit(file, congress, postal_code, district)
  `git add #{file}`
  `git commit -m "Update #{postal_code}-#{district} for #{human_name(congress)}" --date="#{CONGRESSES[congress]}-01-03 00:00:00 -0500"`
end

FileUtils.mkdir_p "#{ROOT}/tmp"
for congress, year in CONGRESSES

  puts "Processing the #{human_name(congress)}..."

  for fips_code, postal_code in STATES

    puts "  Processing #{postal_code}..."

    # Make directories by state
    FileUtils.mkdir_p "#{ROOT}/#{postal_code}"

    # Download data from census
    file = File.expand_path File.basename(filename(congress, fips_code), ".*"), "tmp"
    `wget --directory-prefix=tmp #{filename(congress, fips_code)}` unless File.exist? "#{file}.zip"

    # Census leaves out some districts randomly, like American Samoa from the 107th Congress, if so, skip
    next unless File.exist? "#{file}.zip"

    # Unzip
    `unzip #{file}.zip -d #{file}` unless File.directory? file

    # Convert from shapefile to single, state-wide (or country-wide for 113) geojson file
    `ogr2ogr -f GeoJSON #{file}/data.geojson #{file}/#{File.basename(file).sub("_shp","")}.shp` unless File.exists? "#{file}/data.geojson"

    # Parse JSON and split each district into its own file
    data = JSON.parse File.open("#{file}/data.geojson").read

    data["features"].each do |district|
      fips_code = district["properties"]["STATEFP"]
      postal_code = STATES[fips_code]
      district_num = district["properties"]["CD113FP"]
      puts "    Processing #{postal_code}-#{district_num}..."
      file = "#{ROOT}/#{postal_code}/#{district_num}.geojson"
      write(file, district)
    end
  end # end state
end # end congress

puts "fin."
